<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:progRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
             xmlns:viewModels="clr-namespace:Spice86.ViewModels"
             xmlns:converters="clr-namespace:Spice86.Converters"
             xmlns:behaviors="clr-namespace:Spice86.Behaviors"
             xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
             xmlns:views="clr-namespace:Spice86.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Spice86.Views.ModernDisassemblyView"
             x:DataType="viewModels:IModernDisassemblyViewModel"
             x:Name="DisassemblyView">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceInclude Source="/Styles/DisassemblyResources.axaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:FormattedTextSegmentsConverter x:Key="FormattedTextSegmentsConverter" />
            <converters:BreakpointColorConverter x:Key="BreakpointColorConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid RowDefinitions="Auto,*">
        <!-- Top toolbar with improved layout and organization -->
        <Grid Grid.Row="0" IsVisible="{Binding IsPaused}" Margin="4" ColumnDefinitions="Auto,Auto,Auto,*,Auto">

            <!-- Navigation Controls -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="4">
                <Button Click="GoToCsIpButton_Click" ToolTip.Tip="Go to current CS:IP (F9)" HotKey="F9" x:Name="GoToCsIpButton">
                    <fluent:SymbolIcon Symbol="Location" Width="16" Height="16" />
                </Button>
                <Button Command="{Binding UpdateDisassemblyCommand}" ToolTip.Tip="Refresh view (F5)" HotKey="F5">
                    <fluent:SymbolIcon Symbol="ArrowSync" Width="16" Height="16" />
                </Button>
                <Button Command="{Binding StepIntoCommand}" ToolTip.Tip="Step into (F11)" HotKey="F11">
                    <fluent:SymbolIcon Symbol="ArrowStepIn" Width="16" Height="16" />
                </Button>
                <Button Command="{Binding StepOverCommand}" ToolTip.Tip="Step over (F10)" HotKey="F10">
                    <fluent:SymbolIcon Symbol="ArrowStepOver" Width="16" Height="16" />
                </Button>
            </StackPanel>

            <!-- Address Input -->
            <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="4" Margin="8,0,0,0">
                <TextBlock VerticalAlignment="Center" Text="Address:" />
                <TextBox Width="120" Text="{Binding CurrentInstructionAddress, StringFormat=0x{0:X}}" />
                <Button Command="{Binding UpdateDisassemblyCommand}" Content="Go" />
            </StackPanel>

            <!-- Function Selection -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="4" Margin="8,0,0,0" IsVisible="{Binding IsFunctionInformationProvided}">
                <TextBlock VerticalAlignment="Center" Text="Function:" />
                <ComboBox Width="200"
                          ItemsSource="{Binding Functions}"
                          SelectedItem="{Binding SelectedFunction}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button Command="{Binding GoToFunctionCommand}" CommandParameter="{Binding SelectedFunction}" Content="Go" />
            </StackPanel>

            <!-- View Options -->
            <StackPanel Grid.Column="4" Orientation="Horizontal" Spacing="4">
                <Button Command="{Binding NewDisassemblyViewCommand}" ToolTip.Tip="New view">
                    <fluent:SymbolIcon Symbol="DocumentAdd" Width="16" Height="16" />
                </Button>
            </StackPanel>
        </Grid>

        <!-- Main content area with disassembly and registers -->
        <Grid Grid.Row="1" ColumnDefinitions="*, Auto">
            <!-- Loading indicator -->
            <progRing:ProgressRing Grid.Column="0"
                                   Width="40"
                                   Height="40"
                                   IsActive="{Binding IsLoading}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource SystemAccentColor}" />

            <!-- Disassembly View with Scrolling -->
            <ListBox Grid.Column="0"
                     IsVisible="{Binding IsPaused}"
                     ItemsSource="{Binding SortedDebuggerLinesView}"
                     Name="DisassemblyListBox"
                     Background="Transparent"
                     BorderThickness="1,0,0,0"
                     BorderBrush="{DynamicResource SemiColorBorder}"
                     Padding="0,0,16,0"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                     SelectedItem="{Binding SelectedDebuggerLine}"
                     behaviors:DisassemblyScrollBehavior.IsEnabled="True"
                     behaviors:DisassemblyScrollBehavior.TargetAddress="{Binding CurrentInstructionAddress}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Create breakpoint here" 
                                  Command="{Binding CreateExecutionBreakpointHereCommand}" 
                                  CommandParameter="{Binding SelectedDebuggerLine}"
                                  IsVisible="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null, Converter={x:Static ObjectConverters.IsNull}}"/>
                        <MenuItem Header="Remove breakpoint" 
                                  Command="{Binding RemoveExecutionBreakpointHereCommand}" 
                                  CommandParameter="{Binding SelectedDebuggerLine}"
                                  IsVisible="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                        <MenuItem Header="Disable breakpoint" 
                                  Command="{Binding DisableBreakpointCommand}" 
                                  CommandParameter="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null}"
                                  IsVisible="{Binding SelectedDebuggerLine.Breakpoint.IsEnabled, FallbackValue=null}"
                                  IsEnabled="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                        <MenuItem Header="Enable breakpoint" 
                                  Command="{Binding EnableBreakpointCommand}" 
                                  CommandParameter="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null}"
                                  IsVisible="{Binding SelectedDebuggerLine.Breakpoint, FallbackValue=null, Converter={x:Static ObjectConverters.IsNotNull}}"
                                  IsEnabled="{Binding SelectedDebuggerLine.Breakpoint.IsEnabled, FallbackValue=null, Converter={x:Static BoolConverters.Not}}"/>
                        <Separator/>
                        <MenuItem Header="Move CS:IP here" 
                                  Command="{Binding MoveCsIpHereCommand}" 
                                  CommandParameter="{Binding SelectedDebuggerLine}"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="Padding" Value="4,1" />
                        <Setter Property="Margin" Value="0" />
                    </Style>
                </ListBox.Styles>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl FontFamily="Cascadia Code,Consolas,Menlo,Monaco,monospace"
                                        behaviors:HighlightBehavior.IsContentHighlighted="{Binding IsCurrentInstruction}"
                                        FontWeight="{Binding IsCurrentInstruction, Converter={x:Static converters:HighlightingConverter.TrueToBold}}"
                                        Padding="0"
                                        Margin="0"
                                        behaviors:InstructionPointerBehavior.IsEnabled="True">
                            <ContentControl.Styles>
                                <Style Selector="SelectableTextBlock">
                                    <Setter Property="Foreground"
                                            Value="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}" />
                                    <Setter Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Background}" />
                                </Style>
                            </ContentControl.Styles>

                            <Grid ColumnDefinitions="Auto, Auto, *,4*" Margin="0">
                                <!-- Breakpoint indicator -->
                                <Border Grid.Column="0"
                                        Width="16"
                                        Height="16"
                                        Background="Transparent"
                                        Tapped="OnBreakpointClicked"
                                        Cursor="Hand">
                                    <Ellipse
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{Binding Breakpoint.IsEnabled, FallbackValue=Transparent, Converter={StaticResource BreakpointColorConverter}}"
                                        Margin="0,0,4,0" />
                                </Border>

                                <!-- Address -->
                                <SelectableTextBlock Grid.Column="1"
                                           Text="{Binding SegmentedAddress}"
                                           Foreground="#78C9B0"
                                           FontWeight="SemiBold"
                                           Margin="0,0,6,0" />

                                <!-- Bytes -->
                                <SelectableTextBlock Grid.Column="2"
                                           Text="{Binding ByteString}"
                                           Foreground="#B5CEA8"
                                           FontFamily="Consolas,Menlo,Monaco,monospace"
                                           Margin="6,0,0,0" />

                                <!-- Instruction -->
                                <SelectableTextBlock Grid.Column="3"
                                                     Inlines="{Binding DisassemblySegments, Converter={StaticResource FormattedTextSegmentsConverter}}"
                                                     Margin="12,0,0,0" />
                            </Grid>
                        </ContentControl>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Register View Panel -->
            <Border Grid.Column="1"
                    Width="250"
                    IsVisible="{Binding IsPaused}"
                    BorderBrush="{DynamicResource SemiColorBorder}"
                    BorderThickness="1,0,0,0"
                    Padding="8">
                <views:RegistersView DataContext="{Binding Registers}" />
            </Border>
        </Grid>
    </Grid>
</UserControl>